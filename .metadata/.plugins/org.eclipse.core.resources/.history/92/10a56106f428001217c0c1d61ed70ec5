package clusterer;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * 
 * @author faber
 * 
 * Is immutable object.
 *
 */
public class Attribute {
	private final double average;
	private final double stdDev;
	private final int support;
	private final double[] leafList;
	
	public Attribute(double average) {
		this.average = average;
		this.stdDev = 0.0;
		this.support = 1;
		leafList = new double[] {average};
	}
	
	
	public Attribute(List<Attribute> attributesToCombine) {
		int sizeOfNewLeafList = 0;
		for (Attribute attribute : attributesToCombine) {
			sizeOfNewLeafList.+= attribute.getLeafList().length;
		}		
		double[] tmpAr = new double[]
		for (Attribute attribute : attributesToCombine) {
			leafList.addAll(attribute.getLeafList());
		}
		for (Attribute attribute : attributesToCombine) {
			this.support += attribute.getSupport();
		}
		double tmp = 0.0;
		for (Double avgLi : leafList) {
			tmp += avgLi;
		}
		this.average = tmp / leafList.size();
		tmp = 0.0;
		for (Double avgLi : leafList) {
			tmp += Math.pow((avgLi-this.average),2.0);
		}
		this.stdDev = Math.sqrt(tmp/(leafList.size() - 1.0));

	}
	
	public double getAverage() {
		return average;
	}
	
	public double getStdDev() {
		return stdDev;
	}
	
	public int getSupport() {
		return support;
	}
	
	private double[] getLeafList() {
		return leafList;
	}
}
