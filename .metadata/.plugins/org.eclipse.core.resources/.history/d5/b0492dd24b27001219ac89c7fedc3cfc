package client;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.Random;

public class RandomDataset implements Dataset<Double> {

	private static final int NUM_OF_USERS = 15;
	private static final int NUM_OF_MOVIES = 10;

	private Double[][] randomMatrix = new Double[NUM_OF_MOVIES][NUM_OF_USERS];

	private Collection<Collection<Double>> userList = new ArrayList<Collection<Double>>(NUM_OF_USERS);
	private Collection<Collection<Double>> movieList = new ArrayList<Collection<Double>>(NUM_OF_MOVIES);

	public RandomDataset() {
		initRandomMatrix();
		randomMatrixList = Arrays.asList(randomMatrix);
	}


	@Override
	public Iterator<Collection<Double>> iterateOverUser() {

		return null;
	}

	@Override
	public Iterator<Collection<Double>> iterateOverContent() {

		return null;

	}


	private void initRandomMatrix() {
		Random randomGenerator = new Random();
		for (int i = 0; i < randomMatrix.length; i++) {
			for (int j = 0; j < randomMatrix[i].length; j++) {
				// high chance for null values
				if (randomGenerator.nextInt() % 4 == 0) {
					// we want to have rating values in the interval [0.0, 1.0] 
					// rounded to one decimal digit.
					randomMatrix[i][j] = ((double)randomGenerator.nextInt(11) / 10.0);

				} else {
					randomMatrix[i][j] = null;
				}
			}
		}
	}

	private void initUserList() {
		List<ArrayList>
		for (int i = 0; i < randomMatrix[0].length; i++) {
			
		}
		
	}

	public void printRandomMatrix() {
		for (int i = 0; i < randomMatrix.length; i++) {
			for (int j = 0; j < randomMatrix[i].length; j++) {
				System.out.print(randomMatrix[i][j] +  "\t| ");
			}
			System.out.println();
		}
	}

}
