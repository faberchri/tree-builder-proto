package client;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.ListIterator;
import java.util.Map;

public class GrouplensDataset<T extends Number> implements Dataset<T> {
	
	Map<Integer, List<Integer>> userMap = new HashMap<Integer, List<Integer>>();
	Map<Integer, List<Integer>> movieMap = new HashMap<Integer, List<Integer>>();

	
	@Override
	public ListIterator<List<T>> iterateOverUsers() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ListIterator<List<T>> iterateOverContentItems() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getNumberOfUsers() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int getNumberOfContentItems() {
		// TODO Auto-generated method stub
		return 0;
	}
	
	public GrouplensDataset(File datasetFile) {
		InputStream input;
		if (datasetFile == null) {
			input = this.getClass().getResourceAsStream("u1.base");
		} else {
			try {
				input = new FileInputStream(datasetFile);
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			}
		}
		parseDataset(input);
	}
	
	private void parseDataset(InputStream input) {
		try {
			int in = input.read();
			
			int currentUser = -1;
			int currentItem = -1;
			int currentRating = -1;
			int timeStamp = -1;
			List<Character> charLi = new ArrayList<Character>();
			while (in != -1) {
				charLi.add((char)in);
				if (in == (int)'\n') {
					StringBuilder builder = new StringBuilder(charLi.size());
					for(Character ch: charLi)
					{
						builder.append(ch);
					}
					extractData(builder.toString());
					charLi.clear();
				}
				in = input.read();
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	private void extractData(String entry) {
		String[] fields = entry.split("\t");
		
	}

}
