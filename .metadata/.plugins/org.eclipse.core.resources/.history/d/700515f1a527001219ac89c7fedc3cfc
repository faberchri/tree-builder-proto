package clusterer;

import java.util.ArrayList;
import java.util.List;

public abstract class NodeFactory<T> {
	
//	private NodeDistanceCalculator nodeDistanceCalculator;
	private ContentNodeFactory<T> contentNodeFactory = new ContentNodeFactory<T>(ndc)
	
	public NodeFactory(NodeDistanceCalculator ndcUsers, NodeDistanceCalculator ndcContent) {
		this.nodeDistanceCalculator = ndc;
	}
		
	public abstract NodeDistanceCalculator getNodeDistanceCalculator();
	
	
	public abstract Node<T> createNode(List<Node<T>> nodesToMerge);
	
	public List<Node<T>> createEmptyContentNodes(int numberOfNodes) {
		List<Node<T>> movies = new ArrayList<Node<T>>();
		for (int i = 0; i < numberOfNodes; i++) {
			movies.add(createNode(null));
		}
		return movies;
	}

	
//	public MovieNode<T> createMovieNode(Node<T>[] mergeNodes) {
//		return null;
//	}
//	
//	public UserNode<T> createUserNode(Node<T>[] mergeNodes) {
//		return null;
//	}
}
