package client;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.Map;

public class GrouplensDataset implements Dataset<Integer> {
	
	List<DatasetItem<Integer>> datasetItems = new ArrayList<DatasetItem<Integer>>();
	
	public GrouplensDataset(File datasetFile) {
		try {
			InputStream input;
			if (datasetFile == null) {
				input = this.getClass().getResourceAsStream("u1.base");
			} else {
				input = new FileInputStream(datasetFile);
			}
			parseDataset(input);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

	private void parseDataset(InputStream input) {
		try {
			int in = input.read();
			
			int currentUser = -1;
			int currentItem = -1;
			int currentRating = -1;
			int timeStamp = -1;
			List<Character> charLi = new ArrayList<Character>();
			while (in != -1) {
				charLi.add((char)in);
				if (in == (int)'\n') {
					StringBuilder builder = new StringBuilder(charLi.size());
					for(Character ch: charLi)
					{
						builder.append(ch);
					}
					extractData(builder.toString());
					charLi.clear();
				}
				in = input.read();
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	private void extractData(String entry) {
		String[] fields = entry.split("\t");
		Integer[] intFields = new Integer[fields.length];
		for (int i = 0; i < fields.length; i++) {			
			intFields[i] = Integer.parseInt(fields[i]);			
		}
		datasetItems.add(new SimpleDatasetItem<Integer>(intFields[2], intFields[0], intFields[1]));
	}

	@Override
	public Iterator<DatasetItem<Integer>> iterateOverDatasetItems() {
		return datasetItems.iterator();
	}

	@Override
	public int getNumberOfUsers() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int getNumberOfContentItems() {
		// TODO Auto-generated method stub
		return 0;
	}

}
