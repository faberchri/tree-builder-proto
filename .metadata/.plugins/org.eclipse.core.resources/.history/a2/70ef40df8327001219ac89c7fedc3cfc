package clusterer;

import java.util.Map;
import java.util.Set;


final class MovieNode<T> extends AbstractNode<T> implements Node<T>{
	
	private static int movieNodeId = 0;
	private static NodeFactory nodeFactory = new ContentNodeFactory<T>();
	
	private Map<UserNode<T>, T> users;
	private final int id = movieNodeId++;
	
	public MovieNode(NodeDistanceCalculator ndc) {
		super(ndc);
	}
	
	public void setUsers(Map<UserNode<T>, T> users) {
		this.users = users;
	}
	
	public Set<UserNode<T>> getAttributeKeys() {
		return users.keySet();
	}
	
	public T getAttributeValue(Node<T> node) {
		return users.get(node);
	}
			
	public String getAttributesString() {
		return getAttributesString(users);
	}
	
	@Override
	public String toString() {
		return "MovieNode".concat(" ").concat(String.valueOf(id));
	}
	
	@Override
	public int getId() {
		return id;
	}
	
	public NodeFactory<T> getNodeFactory() {
		return nodeFactory;
	}
}
